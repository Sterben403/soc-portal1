services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: soc_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "sleep 5 && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    env_file:
      - .env
    environment:
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/soc_portal

  # === Keycloak Database ===
  kc-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
    healthcheck:
      # проверяем конкретно БД keycloak под пользователем keycloak
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10

  # === Keycloak ===
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    command: ["start"]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123

      KC_DB: postgres
      KC_DB_URL_HOST: kc-db
      KC_DB_URL_PORT: "5432"
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123

      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      JAVA_OPTS: "-Xms256m -Xmx1024m"
    ports:
      - "8080:8080"
    depends_on:
      kc-db:
        condition: service_healthy
    restart: unless-stopped

  # === Frontend ===
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
      - keycloak
    restart: unless-stopped

volumes:
  pg_data:
  kc_pgdata: